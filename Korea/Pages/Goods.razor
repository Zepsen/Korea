@page "/category/{Id:int}" 
@using Korea.Shared.Models;
@using Korea.Core;
@using Korea.Shared.Components;
@using System.Linq;

@inherits Page
@inject HttpClient Http

<div class="row">
	@foreach (var good in goods.Data)
	{
		<GoodCard Model="good"/>
	}	
</div>

<div class="row">
	<Pagination Model="pagination" OnChange="OnChangePage"/>
</div>


@code 
{	
	[Parameter]
    public int Id { get; set; }

	private PaginationModel pagination = new PaginationModel();
	private Result<Good> goods = new Result<Good>();
	private FilterModel filter = new FilterModel();
    		

	protected override void Breadcrumbs()
	{
		BasePage.AddBreadcrump(new List<Breadcrumb> 
		{ 
			new Breadcrumb { Name = "Categories", Route = "/" },
			new Breadcrumb { Name = Category.Crumb(Id), Active = true }
		});
	}

	protected override async Task OnInitializedAsync()
	{
		goods = await GetGoods(filter);
	}

	private async Task<Result<Good>> GetGoods(FilterModel filter)
	{
		var res = await Http.GetJsonAsync<List<Good>>("sample-data/goods.json");
			res = res.Where(i => i.CategoryId == Id).ToList();
				
		pagination.LastPage = res.Count / filter.Take + 1;

		return new Result<Good> 
		{
			Data = res.Skip((filter.Page - 1) * filter.Take).Take(filter.Take).ToList(),
			Total = res.Count
		};		
	}

	private async Task OnChangePage(int page)
	{
		filter.Page = page;
		pagination.Page = page;
		goods = await GetGoods(filter);
	}
}